// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

package com.microsoft.marketplace.meter.models;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/** Defines values for UsageEventStatusEnum. */
public enum UsageEventStatusEnum {
    /** Enum value Accepted. */
    ACCEPTED("Accepted"),

    /** Enum value Expired. */
    EXPIRED("Expired"),

    /** Enum value Duplicate. */
    DUPLICATE("Duplicate"),

    /** Enum value Error. */
    ERROR("Error"),

    /** Enum value ResourceNotFound. */
    RESOURCE_NOT_FOUND("ResourceNotFound"),

    /** Enum value ResourceNotAuthorized. */
    RESOURCE_NOT_AUTHORIZED("ResourceNotAuthorized"),

    /** Enum value InvalidDimension. */
    INVALID_DIMENSION("InvalidDimension"),

    /** Enum value InvalidQuantity. */
    INVALID_QUANTITY("InvalidQuantity"),

    /** Enum value BadArgument. */
    BAD_ARGUMENT("BadArgument");

    /** The actual serialized value for a UsageEventStatusEnum instance. */
    private final String value;

    UsageEventStatusEnum(String value) {
        this.value = value;
    }

    /**
     * Parses a serialized value to a UsageEventStatusEnum instance.
     *
     * @param value the serialized value to parse.
     * @return the parsed UsageEventStatusEnum object, or null if unable to parse.
     */
    @JsonCreator
    public static UsageEventStatusEnum fromString(String value) {
        UsageEventStatusEnum[] items = UsageEventStatusEnum.values();
        for (UsageEventStatusEnum item : items) {
            if (item.toString().equalsIgnoreCase(value)) {
                return item;
            }
        }
        return null;
    }

    @JsonValue
    @Override
    public String toString() {
        return this.value;
    }
}
